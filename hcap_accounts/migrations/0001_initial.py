# Generated by Django 3.0.5 on 2020-04-30 03:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hcap_accounts.managers.user_manager
import hcap_utils.contrib.validations.cpf_validator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("hcap_geo", "0001_initial"),
        ("auth", "0011_update_proxy_permissions"),
        ("hcap_institutions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Required. Must be a valid email address.",
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Required. At most 150 characters.",
                        max_length=150,
                        verbose_name="full name",
                    ),
                ),
                (
                    "cpf",
                    models.CharField(
                        help_text='Required. 11 digits formatted as "000.000.000-00".',
                        max_length=14,
                        unique=True,
                        validators=[hcap_utils.contrib.validations.cpf_validator.CPFValidator()],
                        verbose_name="CPF",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ("name", "email"),
                "abstract": False,
            },
            managers=[("objects", hcap_accounts.managers.user_manager.UserManager()),],
        ),
        migrations.CreateModel(
            name="RegionManager",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "is_authorized",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether the user can manage the region.",
                        verbose_name="authorized",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        help_text="Required.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="managers",
                        to="hcap_geo.Region",
                        verbose_name="region",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Required.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="region_managers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "region manager",
                "verbose_name_plural": "region managers",
                "unique_together": {("user", "region")},
            },
        ),
        migrations.CreateModel(
            name="HealthcareUnitNotifier",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "is_authorized",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether the user can notify for the healthcare unit.",
                        verbose_name="authorized",
                    ),
                ),
                (
                    "healthcare_unit",
                    models.ForeignKey(
                        help_text="Required.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifiers",
                        to="hcap_institutions.HealthcareUnit",
                        verbose_name="healthcare unit",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Required.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="healthcare_unit_notifiers",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "healthcare unit notifier",
                "verbose_name_plural": "healthcare unit notifiers",
                "unique_together": {("user", "healthcare_unit")},
            },
        ),
    ]
